/**
 * This class contains class (static) methods
 * that will help you test the Picture class 
 * methods.  Uncomment the methods and the code
 * in the main to test.
 * 
 * @author Barbara Ericson 
 */
public class PictureTester
{
  /** Method to test zeroBlue */
  public static void testZeroBlue()
  {
    Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
    beach.explore();
    beach.zeroBlue();
    beach.explore();
  }
  
  public static void testKeepOnlyBlue(){
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.keepOnlyBlue();
	  beach.explore();
  }
  
  public static void testKeepOnlyRed(){
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.keepOnlyRed();
	  beach.explore();
  }
  
  public static void testKeepOnlyGreen(){
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.keepOnlyGreen();
	  beach.explore();
  }
  
  public static void testNegate(){
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.negate();
	  beach.explore();
  }
  
  public static void testGrayscale(){
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.grayscale();
	  beach.explore();
  }
  
  public static void testFixUnderwater(){
	  Picture fish = new Picture("H:\\pixLab\\images\\water.jpg");
	  fish.explore();
	  fish.fixUnderwater();
	  fish.explore();
  }
  
  /** Method to test mirrorVertical */
  public static void testMirrorVertical()
  {
    Picture caterpillar = new Picture("H:\\pixLab\\images\\caterpillar.jpg");
    caterpillar.explore();
    caterpillar.mirrorVertical();
    caterpillar.explore();
  }
  
  public static void testMirrorRightToLeft(){
	  Picture caterpillar = new Picture("H:\\pixLab\\images\\caterpillar.jpg");
	  caterpillar.explore();
	  caterpillar.mirrorVerticalRightToLeft();
	  caterpillar.explore();
  }
  
  public static void testMirrorHorizontal(){
	  Picture bike = new Picture("H:\\pixLab\\images\\redMotorcycle.jpg");
	  bike.explore();
	  bike.mirrorHorizontal();
	  bike.explore();
  }
  
  public static void testMirrorHorizontalBotToTop(){
	  Picture bike = new Picture("H:\\pixLab\\images\\redMotorcycle.jpg");
	  bike.explore();
	  bike.mirrorHorizontalBotToTop();
	  bike.explore();
  }
  
  public static void testMirrorDiagonal(){
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.mirrorDiagonal();
	  beach.explore();
  }
  
  /** Method to test mirrorTemple */
  public static void testMirrorTemple()
  {
    Picture temple = new Picture("H:\\pixLab\\images\\temple.jpg");
    temple.explore();
    temple.mirrorTemple();
    temple.explore();
  }
  
  public static void testMirrorArms(){
	  Picture snowman = new Picture("H:\\pixLab\\images\\snowman.jpg");
	  snowman.explore();
	  snowman.mirrorArms();
	  snowman.explore();
  }
  
  public static void testMirrorGull(){
	  Picture gull = new Picture("H:\\pixLab\\images\\seagull.jpg");
	  gull.explore();
	  gull.mirrorGulls();
	  gull.explore();
  }
  
  public static void testCopy2(){
	  Picture katie = new Picture("H:\\pixLab\\images\\KatieFancy.jpg");
	  Picture blank = new Picture("H:\\pixLab\\images\\640x480.jpg");
	  katie.explore();
	  blank.copy2(katie, 70, 70, 140, 150, 50, 50);
	  blank.explore();
  }
  
  /** Method to test the collage method */
  public static void testCollage()
  {
    Picture canvas = new Picture("H:\\pixLab\\images\\640x480.jpg");
    canvas.createCollage();
    canvas.explore();
  }
  
  public static void testMyCollage(){
	  Picture canvas = new Picture("H:\\pixLab\\images\\640x480.jpg");
	  canvas.myCollage();
	  canvas.explore();
  }
  
  /** Method to test edgeDetection */
  public static void testEdgeDetection()
  {
    Picture swan = new Picture("H:\\pixLab\\images\\swan.jpg");
    swan.explore();
    swan.edgeDetection(10);
    swan.explore();
  }
  
  public static void testBlur(int x, int y, int w, int h, int n)
  {
     Picture redMoto = new Picture("H:\\pixLab\\images\\redMotorcycle.jpg");
     redMoto.explore();
     for (int i = 0; i<n; i++){
        redMoto.blur(x,y,w,h);
      }
      redMoto.explore();
  }
  
  public static void testEncodeDecode(String picture){
	  Picture message = new Picture(picture);
	  Picture beach = new Picture("H:\\pixLab\\images\\beach.jpg");
	  beach.explore();
	  beach.encode(message);
	  beach.explore();
	  beach.decode();
	  beach.explore();
  }
 

  
  /** Main method for testing.  Every class can have a main
    * method in Java */
  public static void main(String[] args)
  {
    // uncomment a call here to run a test
    // and comment out the ones you don't want
	//testBlur(190,160,20,20,10);
	  testEncode("H:\\pixLab\\images\\image-2018-05-18.jpg");
    // to run
    //testZeroBlue();
    //testKeepOnlyBlue();
    //testKeepOnlyRed();
    //testKeepOnlyGreen();
    //testNegate();
    //testGrayscale();
    //testFixUnderwater();
    //testMirrorVertical();
	//testMirrorRightToLeft();
	//testMirrorHorizontal();
	//testMirrorHorizontalBotToTop();
    //testMirrorTemple();
    //testMirrorArms();
    //testMirrorGull();
    //testMirrorDiagonal();
	//testCopy2();
    //testCollage();
	//testMyCollage();
    //testCopy();
    //testEdgeDetection();
    //testEdgeDetection2();
    //testChromakey();
    //testEncodeAndDecode();
    //testGetCountRedOverValue(250);
    //testSetRedToHalfValueInTopHalf();
    //testClearBlueOverValue(200);
    //testGetAverageForColumn(0);
  }
}